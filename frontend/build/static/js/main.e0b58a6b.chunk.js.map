{"version":3,"sources":["utils/requests.js","utils/setAuthToken.js","hooks/useAuth.js","components/SignInScreen.js","components/Navbar.js","components/AuthorInfo.js","components/Comments.js","components/Vote.js","components/Share.js","components/Views.js","components/Report.js","components/ActionBar.js","components/EntityHeader.js","components/Entity.js","components/Categories/Category.js","components/Categories/index.js","components/AddTags/index.js","components/AskQuestion.js","components/Home.js","components/Suggestions/Category.js","components/Suggestions/index.js","components/Editor.js","components/WriteAnswer.js","components/QuestionPage.js","App.js","serviceWorker.js","index.js","components/userThumb.jpeg"],"names":["requests","axios","create","headers","setAuthToken","token","request","defaults","common","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","authContext","createContext","ProvideAuth","children","auth","useState","user","setUser","signinFormActive","setSigninFormActive","useEffect","unsubscribe","onAuthStateChanged","getIdToken","then","idToken","signout","signOut","useProvideAuth","Provider","value","useAuth","useContext","SignInScreen","handleClose","uiConfig","signInFlow","signInOptions","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","FacebookAuthProvider","callbacks","signInSuccessWithAuthResult","Dropdown","onClick","Toggle","as","id","Image","className","src","photoURL","userThumb","roundedCircle","style","width","cursor","Menu","Header","displayName","Divider","Item","Modal","centered","show","onHide","closeButton","Title","Body","firebaseAuth","Footer","Button","variant","NavBar","Navbar","bg","expand","Brand","href","aria-controls","Collapse","Nav","Link","Form","inline","FormControl","type","placeholder","AuthorInfo","props","imgSize","min","Row","lineHeight","noGutters","Col","xs","author","self","Badge","size","md","CommentIcon","InputGroup","Prepend","title","readOnly","disabled","aria-label","aria-describedby","commentCount","CommentInput","comment","setComment","comments","setComments","postComment","e","a","preventDefault","comme","body","target","reset","post","parentType","pid","commentRes","data","setCommentCount","console","log","onSubmit","Label","htmlFor","srOnly","Control","onChange","maxWiddth","CommentSection","get","Card","fontSize","Container","ListGroup","map","obj","key","_id","upvoteCount","downvoteCount","Vote","VoteContext","voted","setVoted","setDownvoteCount","setUpvoteCount","clicked","setClicked","voteHandler","vote","delete","voteResponse","Spinner","animation","role","Share","setShow","EmailShareButton","url","subject","EmailIcon","round","FacebookShareButton","quote","FacebookIcon","LinkedinShareButton","LinkedinIcon","WhatsappShareButton","WhatsappIcon","PinterestShareButton","PinterestIcon","RedditShareButton","RedditIcon","TumblrShareButton","TumblrIcon","TwitterShareButton","TwitterIcon","Views","count","Report","alert","ActionBar","views","setOpenComments","openComments","share","report","EntityHeader","color","to","eid","Entity","expanded","setExpanded","bodyContent","useRef","voteValue","firstImg","ref","maxHeight","overflow","textAlign","visibility","setOpenCommentInput","Category","open","setOpen","following","follow","setFollow","onMouseEnter","onMouseLeave","name","Fade","in","aria-expanded","CategoriesPanel","categories","setCategories","minWidth","AddTags","state","items","tags","error","handleKeyDown","evt","includes","trim","isValid","setState","setQuestion","question","handleChange","handleDelete","item","filter","i","handlePaste","clipboardData","getData","split","toBeAdded","tag","isInList","email","this","viewer","onKeyDown","onPaste","React","Component","AskQuestion","loading","setLoading","backdrop","keyboard","Group","controlId","rows","description","Text","muted","response","createBrowserHistory","push","catch","Home","fluid","Categories","posts","bestAnswer","ReactHtmlParser","rel","alt","height","Editor","editor","content","setContent","config","showWordsCounter","showXPathInStatusbar","uploader","insertImageAsBase64URI","buttons","toolbarAdaptive","useMemo","WriteAnswer","answer","setAnswer","enforceFocus","questionTitle","img","document","createElement","innerHTML","querySelector","questionID","setAnswers","concat","answers","QuestionPage","useParams","outerHTML","Suggestions","App","setPosts","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.e0b58a6b.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst requests = axios.create({\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n});\r\n\r\nexport default requests","import request from './requests'\r\n\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        request.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    } else {\r\n        delete request.defaults.headers.common['Authorization'];\r\n    }\r\n};\r\n\r\nexport default setAuthToken","import React, { useState, useEffect, useContext, createContext } from \"react\";\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\nfirebase.initializeApp({\r\n    apiKey: \"AIzaSyBHCFpqUji6J7UTsEepwl2ez0y2UUSDBXk\",\r\n    authDomain: \"ringed-magpie-285413.firebaseapp.com\",\r\n    databaseURL: \"https://ringed-magpie-285413.firebaseio.com\",\r\n    projectId: \"ringed-magpie-285413\",\r\n    storageBucket: \"ringed-magpie-285413.appspot.com\",\r\n    messagingSenderId: \"909033433276\",\r\n    appId: \"1:909033433276:web:7c648e23c9ef94eba008b9\",\r\n    measurementId: \"G-Y8JJMBV190\"\r\n});\r\n\r\nconst authContext = createContext();\r\n\r\nexport function ProvideAuth({ children }) {\r\n    const auth = useProvideAuth();\r\n    return <authContext.Provider value={auth}>{children}</authContext.Provider>;\r\n}\r\n\r\n// Hook for child components to get the auth object ...\r\n// ... and re-render when it changes.\r\nexport const useAuth = () => {\r\n    return useContext(authContext);\r\n};\r\n\r\n// Provider hook that creates auth object and handles state\r\nfunction useProvideAuth() {\r\n    const [user, setUser] = useState(null);\r\n    const [signinFormActive, setSigninFormActive] = useState(false);\r\n\r\n    const signout = () => {\r\n        return firebase.auth().signOut().then(() => {\r\n            setUser(false);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = firebase.auth().onAuthStateChanged(user => {\r\n            if (user){\r\n                user.getIdToken(/* forceRefresh */ true).then(function(idToken) {\r\n                    setAuthToken(idToken);\r\n                    setUser(user);\r\n                })\r\n            }\r\n            else {\r\n                setAuthToken(null);\r\n                setUser(false);\r\n            }\r\n        });\r\n        return () => unsubscribe();\r\n    }, []);\r\n  \r\n    return {\r\n        user,\r\n        signout,\r\n        signinFormActive,\r\n        setSigninFormActive,\r\n    };\r\n}","import React from 'react';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport firebase from 'firebase/app';\r\nimport userThumb from './userThumb.jpeg'\r\nimport {Button,Modal,Image,Dropdown} from 'react-bootstrap';\r\nimport { useAuth } from \"../hooks/useAuth\";\r\n\r\nfunction SignInScreen() {\r\n    const auth=useAuth();\r\n\r\n    const handleClose = () => auth.setSigninFormActive(false);\r\n    const handleShow = () => auth.setSigninFormActive(true);\r\n\r\n    // Configure FirebaseUI.\r\n    const uiConfig = {\r\n        signInFlow: 'popup',\r\n        signInOptions: [\r\n            firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n            firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n            firebase.auth.FacebookAuthProvider.PROVIDER_ID\r\n        ],\r\n        callbacks: {\r\n            signInSuccessWithAuthResult: () => false\r\n        }\r\n    };\r\n\r\n    const imgSize={width:\"36px\",cursor:\"pointer\"}\r\n\r\n    return (\r\n    <>\r\n    <Dropdown onClick={auth.user || auth.signinFormActive?null:handleShow}>\r\n        <Dropdown.Toggle as=\"div\" id=\"dropdown-basic\">\r\n            <Image className=\"m-1\" src={auth.user ? auth.user.photoURL ? auth.user.photoURL : userThumb: userThumb} roundedCircle style={imgSize}/>\r\n        </Dropdown.Toggle>\r\n        {auth.user?\r\n            <Dropdown.Menu className=\"dropdown-menu-right\">\r\n                <Dropdown.Header>Hello <strong>{auth.user.displayName}!</strong></Dropdown.Header>\r\n                <Dropdown.Divider />\r\n                <Dropdown.Item onClick={auth.signout}>Logout</Dropdown.Item>\r\n            </Dropdown.Menu>\r\n        :\r\n            <Modal\r\n                centered\r\n                show={auth.signinFormActive}\r\n                onHide={handleClose}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Authenticate</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"px-4\">\r\n                    <p>Please sign-in:</p>\r\n                    <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()}/>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Cancel\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        }\r\n    </Dropdown>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default SignInScreen;","import React from 'react';\r\nimport { FaGlobe,FaBell ,FaIdBadge } from \"react-icons/fa\";\r\nimport {Navbar, Form, Nav, FormControl, Button} from 'react-bootstrap';\r\nimport SignIn from './SignInScreen';\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand href=\"/\">Qusol-Image</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ml-4 mr-auto\">\r\n            <Nav.Link href=\"#home\">Trending</Nav.Link>\r\n            <Nav.Link href=\"#article\">Article</Nav.Link>\r\n            <Nav.Link href=\"#answer\">Answer</Nav.Link>\r\n            <Nav.Link href=\"#blogs\">Blog</Nav.Link>\r\n            <Nav.Link href=\"#poll\">Poll</Nav.Link>\r\n            {/*<NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n              </NavDropdown> */}\r\n            </Nav>\r\n            <Form inline>\r\n              <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n              <Button variant=\"outline-success\">Search</Button>\r\n            </Form>\r\n            <Nav className=\"ml-5 mr-4\">\r\n              <Nav.Link href=\"#globe\"><FaGlobe/></Nav.Link>\r\n              <Nav.Link href=\"#notifications\"><FaBell/></Nav.Link>\r\n              <Nav.Link href=\"#badges\"><FaIdBadge/></Nav.Link>\r\n              <SignIn/>\r\n            </Nav>\r\n        </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport userThumb from './userThumb.jpeg'\r\nimport {Badge,Col,Row,Image} from 'react-bootstrap';\r\n\r\nconst AuthorInfo = (props) => {\r\n    const imgSize={width:props.min?\"36px\":\"72px\"}\r\n    return  (\r\n        <Row className=\"my-1 pt-2 pb-0\" style={{lineHeight:\"1.2\"}} noGutters> \r\n            <Col xs={\"auto\"} className=\"mr-1 text-center\">\r\n                <Image className=\"mt-md-0 my-2\" src={props.author?props.author.photoURL?props.author.photoURL:userThumb:userThumb} roundedCircle style={imgSize}/>\r\n            </Col>\r\n            <Col>\r\n                <Col>\r\n                    <p className=\"pr-0 m-0\">\r\n                        <strong>\r\n                            {props.author?props.author.displayName:\"Abhishek Parashar Maheshwari\"}\r\n                        </strong>\r\n                        {props.min || props.self ?null:<span className=\"text-muted d-none d-md-inline ml-1\" >\r\n                            · last updated Jul 23\r\n                        </span>}\r\n                    </p>\r\n                    {props.min?null:<span className=\"text-muted\" style={{lineHeight:\"1\"}}>(@para-abhi) <Badge size=\"sm\" variant=\"warning\">Noobie</Badge></span>}\r\n                    {props.min?null:<p className=\"my-1\">\r\n                        I love to draw and love. I repeat, I love to draw and love.\r\n                    </p>}\r\n                </Col>\r\n                <Col className={props.min?\"pl-3\":\"d-md-none pl-md-1\"} md=\"auto\">\r\n                    <span className=\"text-muted\">\r\n                        last updated Jul 23\r\n                    </span>\r\n                </Col>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default AuthorInfo;","import React,{useState,useEffect} from 'react';\r\nimport Entity from './Entity';\r\nimport {FaComment} from 'react-icons/fa';\r\nimport {Button,Card,ListGroup,InputGroup,Form,FormControl,Col,Row, Container} from 'react-bootstrap';\r\nimport request from '../utils/requests';\r\nimport requests from '../utils/requests';\r\n\r\nfunction CommentIcon(props){\r\n    return (\r\n        <InputGroup className=\"mr-1\" size=\"sm\" as={Col}>\r\n            <InputGroup.Prepend>\r\n                <Button \r\n                    title=\"Comment\"\r\n                    className=\"pt-0\" id=\"basic-addon1\"\r\n                    variant=\"secondary\"\r\n                    onClick={props.onClick}\r\n                >\r\n                    <FaComment size=\"1em\"/>\r\n                </Button>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n                title=\"Comments\"\r\n                readOnly\r\n                disabled\r\n                placeholder=\"Username\"\r\n                aria-label=\"Username\"\r\n                aria-describedby=\"basic-addon1\"\r\n                value={props.commentCount}\r\n            />\r\n        </InputGroup>\r\n    );\r\n}\r\n\r\nfunction CommentInput(props){\r\n    const [comment,setComment]=useState(null);\r\n    const comments=props.comments;\r\n    const setComments=props.setComments;\r\n    const postComment=async (e)=>{\r\n        e.preventDefault();\r\n        if(comment!==\"\"||comment===null){\r\n            const comme={body:comment};\r\n            e.target.reset();\r\n            const commentRes=(await requests.post(`/${props.parentType}/${props.pid}/comment`,comme)).data;\r\n            props.setCommentCount(props.commentCount+1);\r\n            console.log(commentRes);\r\n            setComments([commentRes,...comments]);\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={postComment} className=\"mt-3 w-100\" inline>\r\n            <Form.Label htmlFor=\"inlineFormInputName2\" srOnly>\r\n                Comment\r\n            </Form.Label>\r\n            <Form.Control\r\n                onChange={(e)=>{setComment(e.target.value)}}\r\n                style={{width:\"calc( 98% - 75px )\"}}\r\n                className=\"mr-2 mb-2\"\r\n                size=\"sm\"\r\n                placeholder=\"Enter comment\"\r\n            />\r\n            <Button size=\"sm\" type=\"submit\" className=\"mb-2\" style={{maxWiddth:\"70px\"}}>\r\n                Comment\r\n            </Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nfunction CommentSection(props) {\r\n    const comments =props.comments;\r\n    const setComments =props.setComments;\r\n\r\n    useEffect(()=>{\r\n        (async ()=>{\r\n            if(props.commentCount>0){\r\n                setComments([...comments,...(await request.get(`/${props.parentType}/${props.pid}/comments`)).data]);\r\n            }\r\n        })()    \r\n    },[])\r\n\r\n    if(props.commentCount===0 || !props.commentCount)\r\n        return null;\r\n\r\n    return (\r\n        <Card.Footer style={{fontSize:\"0.9rem\"}} className=\"p-0 pl-3\">\r\n            <Container>\r\n                <Row>\r\n                    <ListGroup id=\"comment-sec\" variant=\"flush\" className=\"border-left\">\r\n                        {comments.map((obj)=>\r\n                            <ListGroup.Item key={obj._id} className=\"p-0 border-0\">\r\n                                <Entity\r\n                                    bg=\"light\" \r\n                                    className=\"w-100 border-bottom-0 border-left-0 border-right-0 rounded-0\"\r\n                                    type=\"comment\" \r\n                                    body={obj.body}\r\n                                    author={obj.author}\r\n                                    id={obj._id}\r\n                                    commentCount={obj.commentCount}\r\n                                    upvoteCount={obj.upvoteCount}\r\n                                    downvoteCount={obj.downvoteCount}\r\n                                />\r\n                            </ListGroup.Item>)\r\n                        }\r\n                    </ListGroup>\r\n                </Row>\r\n            </Container>\r\n        </Card.Footer>\r\n    );\r\n}\r\n\r\nexport {CommentIcon, CommentInput, CommentSection};","import React,{useState, useContext} from 'react';\r\nimport {FaThumbsDown,FaThumbsUp} from 'react-icons/fa';\r\nimport {Button,Col,InputGroup,FormControl,Spinner} from 'react-bootstrap';\r\nimport {VoteContext} from './Entity';\r\nimport requests from '../utils/requests';\r\n\r\nexport default function Vote(props){\r\n    const {voted,setVoted} = useContext(VoteContext);\r\n    const [downvoteCount,setDownvoteCount] = useState(props.downvoteCount);\r\n    const [upvoteCount,setUpvoteCount] = useState(props.upvoteCount);\r\n    const [clicked,setClicked] = useState(null);\r\n    const voteHandler = async (vote) => {\r\n        setClicked(vote);\r\n        if(voted===vote){\r\n            await requests.delete(`/${props.parentType}/${props.pid}/vote`);\r\n            setVoted(null);\r\n            vote?setUpvoteCount(upvoteCount-1):setDownvoteCount(downvoteCount-1);\r\n            setClicked(null);\r\n        }else{\r\n            const voteResponse=(await requests.post(`/${props.parentType}/${props.pid}/${vote?'upvote':'downvote'}`)).data;\r\n            if(voted!==null)\r\n                voted?setUpvoteCount(upvoteCount-1):setDownvoteCount(downvoteCount-1);\r\n            setVoted(voteResponse.value);\r\n            voteResponse.value?setUpvoteCount(upvoteCount+1):setDownvoteCount(downvoteCount+1);\r\n            setClicked(null);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <InputGroup className=\"mr-1\" size=\"sm\" as={Col}>\r\n                <InputGroup.Prepend>\r\n                    <Button\r\n                        title=\"Like\" \r\n                        className=\"pt-0\" id=\"basic-addon1\" \r\n                        disabled={clicked!==null} \r\n                        variant={voted===true ? \"primary\" : \"secondary\" } \r\n                        onClick={()=>{voteHandler(true)}}\r\n                    >\r\n                        {clicked===true?<Spinner animation=\"border\" role=\"status\" size=\"sm\"/>:<FaThumbsUp size=\"1em\"/>}\r\n                    </Button>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                    title=\"Likes\"\r\n                    readOnly\r\n                    disabled\r\n                    placeholder=\"Likes\"\r\n                    aria-label=\"Username\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                    value={upvoteCount}\r\n                />\r\n            </InputGroup>\r\n            <InputGroup className=\"mr-1\" size=\"sm\" as={Col}>\r\n                <InputGroup.Prepend>\r\n                    <Button \r\n                        title=\"Dislike\"\r\n                        className=\"pt-0\" id=\"basic-addon1\" \r\n                        disabled={clicked!==null} \r\n                        variant={voted===false ? \"danger\" : \"secondary\" } \r\n                        onClick={()=>{voteHandler(false)}}\r\n                    >\r\n                        {clicked===false?<Spinner animation=\"border\" role=\"status\" size=\"sm\"/>:<FaThumbsDown size=\"1em\"/>}\r\n                    </Button>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                    title=\"Dislikes\"\r\n                    readOnly\r\n                    disabled\r\n                    placeholder=\"Username\"\r\n                    aria-label=\"Dislikes\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                    value={downvoteCount}\r\n                />\r\n            </InputGroup>\r\n        </>\r\n    );\r\n}","import React,{useState} from 'react';\r\nimport {FaShareAlt} from 'react-icons/fa';\r\nimport {Button,Modal,Container,Row,Col} from 'react-bootstrap';\r\n\r\nimport {\r\n    EmailShareButton,\r\n    FacebookShareButton,\r\n    LinkedinShareButton,\r\n    PinterestShareButton,\r\n    RedditShareButton,\r\n    TumblrShareButton,\r\n    TwitterShareButton,\r\n    WhatsappShareButton,\r\n    EmailIcon,\r\n    FacebookIcon,\r\n    LinkedinIcon,\r\n    PinterestIcon,\r\n    RedditIcon,\r\n    TumblrIcon,\r\n    TwitterIcon,\r\n    WhatsappIcon\r\n  } from \"react-share\";\r\n\r\nexport default function Share(props) {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n            <Button title=\"Share\" variant=\"secondary\" onClick={handleShow} size=\"sm\" className=\"mr-1 pt-0\">\r\n                <FaShareAlt size=\"1em\"/>\r\n            </Button>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Share</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    Share via:\r\n                    <Container className=\"p-3\">\r\n                        <Row className=\"my-3\">\r\n                            <Col>\r\n                                <EmailShareButton url={props.url} subject={props.title} body={\"Qusol\"}><EmailIcon round/></EmailShareButton>\r\n                            </Col>\r\n                            <Col>\r\n                                <FacebookShareButton url={props.url} quote={props.title}><FacebookIcon round/></FacebookShareButton>\r\n                            </Col>\r\n                            <Col>\r\n                                <LinkedinShareButton url={props.url}><LinkedinIcon round/></LinkedinShareButton>\r\n                            </Col>\r\n                            <Col>\r\n                                <WhatsappShareButton  url={props.url} title={props.title}><WhatsappIcon round/></WhatsappShareButton>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"my-3\">\r\n                            <Col>\r\n                                <PinterestShareButton url={props.url} title={props.title}><PinterestIcon round/></PinterestShareButton>\r\n                            </Col>\r\n                            <Col>\r\n                                <RedditShareButton url={props.url} title={props.title}><RedditIcon round/></RedditShareButton>\r\n                            </Col>\r\n                            <Col>\r\n                                <TumblrShareButton  url={props.url} title={props.title}><TumblrIcon round/></TumblrShareButton>\r\n                            </Col>\r\n                            <Col>\r\n                                <TwitterShareButton url={props.url} title={props.title}><TwitterIcon round/></TwitterShareButton>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport {FaRegEye} from 'react-icons/fa';\r\nimport {Button,InputGroup,FormControl,Col} from 'react-bootstrap';\r\n\r\nexport default function Views(props){\r\n    return (\r\n        <InputGroup className=\"mr-1\" as={Col} size=\"sm\">\r\n            <InputGroup.Prepend>\r\n                <Button \r\n                    title=\"Views\"\r\n                    className=\"pt-0\" id=\"basic-addon1\" \r\n                    disabled\r\n                    variant=\"secondary\"\r\n                >\r\n                    <FaRegEye size=\"1em\"/>\r\n                </Button>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n                title=\"Views\"\r\n                readOnly\r\n                disabled\r\n                placeholder=\"Username\"\r\n                aria-label=\"Username\"\r\n                aria-describedby=\"basic-addon1\"\r\n                value={props.count}\r\n            />\r\n        </InputGroup>\r\n    );\r\n}","import React from 'react';\r\nimport {FaExclamation} from 'react-icons/fa';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nexport default function Report() {\r\n    return (\r\n        <Button title=\"Report\" variant=\"secondary\" onClick={()=>{alert(\"Report Clicked!!\")}} size=\"sm\" className=\"pt-0\">\r\n            <FaExclamation size=\"1em\"/>\r\n        </Button>\r\n    );\r\n}","import React from 'react';\r\nimport {Col,Row} from 'react-bootstrap';\r\nimport Vote from './Vote';\r\nimport Share from './Share';\r\nimport Views from './Views';\r\nimport {CommentIcon} from './Comments';\r\nimport Report from './Report';\r\n\r\nexport default function ActionBar(props){\r\n    return (\r\n        <Row className=\"mt-4 justify-content-between flex-nowrap\" noGutters>\r\n            <Col md={9}>\r\n                <Row noGutters>\r\n                    {props.views?<Views count=\"2393\"/>:null}\r\n                    {props.vote?<Vote parentType={props.parentType} pid={props.pid} upvoteCount={props.upvoteCount} downvoteCount={props.downvoteCount}/>:null}\r\n                    {props.comment?<CommentIcon commentCount={props.commentCount} onClick={()=>{props.setOpenComments(!props.openComments)}}/>:null}\r\n                </Row>\r\n            </Col>\r\n            <Col xs={\"auto\"}>\r\n                <Row className=\"justify-content-end flex-nowrap h-100\" noGutters>\r\n                    {props.share?<Share title={\"Element Title\"} url={\"https://element.url.om/elimentId\"}/>:null}\r\n                    {props.report?<Report/>:null}\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Card} from 'react-bootstrap';\r\nimport AuthorInfo from './AuthorInfo';\r\n\r\nconst EntityHeader = (props) => {\r\n    return  (\r\n        <>\r\n            {props.min?null:<AuthorInfo min author={props.author}/>}\r\n            <Link style={{color:\"black\"}} to={`/${props.type}/${props.eid}`}><Card.Title>{props.title}</Card.Title></Link>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EntityHeader;","import React, { useState, createContext, useRef, useEffect } from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport AuthorInfo from './AuthorInfo';\r\nimport {CommentSection,CommentInput} from './Comments';\r\nimport ActionBar from './ActionBar';\r\nimport EntityHeader from './EntityHeader';\r\nimport requests from '../utils/requests';\r\nimport { useAuth } from '../hooks/useAuth';\r\n\r\nconst VoteContext=createContext({\r\n    voted:null,\r\n    setVoted:()=>{}\r\n});\r\n\r\nconst Entity = (props) => {\r\n    const auth = useAuth();\r\n    const [openComments, setOpenComments] = useState(false);\r\n    const [expanded, setExpanded] = useState(false);\r\n    const bodyContent = useRef(null);\r\n    const [comments, setComments] = useState([]);\r\n    const [commentCount, setCommentCount] = useState(props.commentCount);\r\n    const [voted,setVoted]=useState(null);//use props false(dislike)  null(not-voted)  true(like)\r\n    useEffect(()=>{\r\n        (async ()=>{\r\n            if(auth.user){\r\n                const vote = (await requests.get(`/${props.type}/${props.id}/vote`)).data;\r\n                setVoted(vote.value);\r\n            }\r\n        })()\r\n    },[props.type,props.id,auth])\r\n    const voteValue={voted,setVoted};\r\n    return  (\r\n        <Card bg={props.bg} className={props.className||\"mb-3\"} style={{width:\"100%\"}}>\r\n            <Card.Body className=\"p-2 p-sm-3\">\r\n                {props.type!==\"comment\"?<EntityHeader min type={props.type} eid={props.id} title={props.title}/>:null}\r\n                {props.author?<AuthorInfo author={props.author} min={props.type==='comment'}/>:null}\r\n                {expanded?null:(props.firstImg)}\r\n                <div ref={bodyContent} style={{maxHeight:expanded?\"none\":\"11ch\",overflow:\"hidden\"}}>\r\n                    {props.body}\r\n                </div>\r\n                <p style={{textAlign:\"right\", color:\"blue\",cursor:\"pointer\"}} onClick={(e)=>{\r\n                    setExpanded(true);\r\n                    e.target.style.visibility=\"hidden\"\r\n                    console.log(\"Show more clicked\",bodyContent)\r\n                    }}\r\n                >\r\n                    Show more\r\n                </p>\r\n                <VoteContext.Provider value={voteValue}>\r\n                    <ActionBar parentType={props.type} pid={props.id} views={props.type!=='comment'} vote upvoteCount={props.upvoteCount} downvoteCount={props.downvoteCount} comment commentCount={commentCount} share={props.type!=='comment'} report setOpenComments={setOpenComments} openComments={openComments} />\r\n                </VoteContext.Provider>\r\n                {openComments?<CommentInput commentCount={commentCount} setCommentCount={setCommentCount} parentType={props.type} pid={props.id} setOpenCommentInput={setOpenComments} comments={comments} \r\n                setComments={setComments}/>:null}\r\n            </Card.Body>\r\n            {openComments?<CommentSection comments={comments} setComments={setComments} parentType={props.type} pid={props.id} commentCount={commentCount}/>:null}\r\n        </Card>\r\n    )\r\n}\r\nexport {VoteContext};\r\nexport default Entity;","import React, { useState } from 'react';\r\nimport {ListGroup, Button,Fade} from 'react-bootstrap';\r\n// import axios from 'axios';\r\n\r\nconst Category = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [follow, setFollow] = useState(props.following);\r\n    const toggleFollow=()=>{\r\n        setFollow(!follow); \r\n    }\r\n    return(\r\n        <ListGroup.Item\r\n            aria-controls=\"follow-button\"\r\n            onMouseEnter={() => setOpen(true)}\r\n            onMouseLeave={() => setOpen(false)}\r\n            className=\"d-flex justify-content-between align-items-center\"\r\n        >\r\n            <span>\r\n                {props.name}\r\n            </span>\r\n            <Fade in={open}>\r\n                <Button\r\n                    id=\"follow-button\"\r\n                    aria-expanded={open}\r\n                    onClick={toggleFollow}\r\n                    size=\"sm\"\r\n                    variant={follow?\"secondary\":\"primary\"}\r\n                >\r\n                    {follow?\"Unfollow\":\"Follow\"}\r\n                </Button>\r\n            </Fade>\r\n        </ListGroup.Item>\r\n    )\r\n}\r\n\r\nexport default Category;","import React, { useState, useEffect } from 'react';\r\nimport Category from './Category';\r\nimport {ListGroup, Card} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst CategoriesPanel = () => {\r\n    const [categories,setCategories]=useState([]);\r\n    useEffect(()=>{\r\n        (async ()=>{\r\n          console.log('Fetching Posts');\r\n          setCategories((await axios.get('https://jsonplaceholder.typicode.com/users')).data);\r\n        })()\r\n    },[]);\r\n    return (\r\n        <Card style={{width:\"100%\",minWidth:\"271px\"}}>\r\n            <Card.Title className=\"pt-2 px-3\">Categories</Card.Title>\r\n            <Card.Body className=\"p-0\">\r\n                <ListGroup variant=\"flush\" className=\"border-top\">\r\n                    {categories.map((obj,key)=><Category key={key} name={obj.name} following={true}/>)}\r\n                </ListGroup>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default CategoriesPanel;","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nclass AddTags extends React.Component {\r\n  state = {\r\n    items: this.props.tags ||[],\r\n    value: \"\",\r\n    error: null\r\n  };\r\n\r\n  handleKeyDown = (evt) => {\r\n    if ([\"Enter\", \"Tab\", \",\", \" \"].includes(evt.key)) {\r\n      evt.preventDefault();\r\n      var value = this.state.value.trim();\r\n      if (value && this.isValid(value)) {\r\n        this.setState({\r\n          items: [...this.state.items, \"#\"+this.state.value],\r\n          value: \"\"\r\n        });\r\n        this.props.setQuestion({...this.props.question,tags:[...this.state.items, \"#\"+this.state.value]})\r\n      }\r\n    }\r\n  };\r\n\r\n  handleChange = (evt) => {\r\n    this.setState({\r\n      value: evt.target.value,\r\n      error: null\r\n    });\r\n  };\r\n\r\n  handleDelete = (item) => {\r\n    this.setState({\r\n      items: this.state.items.filter((i) => i !== item)\r\n    });\r\n    this.props.setQuestion({...this.props.question,tags:this.state.items})\r\n  };\r\n\r\n  handlePaste = (evt) => {\r\n    evt.preventDefault();\r\n    var paste = evt.clipboardData.getData(\"text\");\r\n    var tags = paste.split(\" \");\r\n    if (tags) {\r\n      var toBeAdded = tags.filter((tag) => !this.isInList(tag));\r\n      this.setState({\r\n        items: [...this.state.items, ...toBeAdded]\r\n      });\r\n      this.props.setQuestion({...this.props.question,tags:this.state.items})\r\n    }\r\n  };\r\n\r\n  isValid(email) {\r\n    return true;\r\n  }\r\n\r\n  isInList(email) {\r\n    return this.state.items.includes(email);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.items.map((item) => (\r\n          <div className=\"tag-item\" key={item}>\r\n            {item}\r\n            {this.props.viewer?null:<button\r\n              type=\"button\"\r\n              className=\"button\"\r\n              onClick={() => this.handleDelete(item)}\r\n            >\r\n              &times;\r\n            </button>}\r\n          </div>\r\n        ))}\r\n\r\n        {this.props.viewer?null:<input\r\n          className={\"input \" + (this.state.error && \" has-error\")}\r\n          value={this.state.value}\r\n          placeholder=\"Type tags for your question here...\"\r\n          onKeyDown={this.handleKeyDown}\r\n          onChange={this.handleChange}\r\n          onPaste={this.handlePaste}\r\n        />}\r\n\r\n        {this.state.error && <p className=\"error\">{this.state.error}</p>}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTags;","import React,{useState} from 'react';\r\nimport {Button,Modal,Form, Spinner} from 'react-bootstrap'\r\nimport AuthorInfo from './AuthorInfo';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport request from '../utils/requests';\r\nimport { createBrowserHistory } from 'history';\r\nimport AddTags from './AddTags/';\r\n\r\n\r\nexport default function AskQuestion() {\r\n    const auth=useAuth();\r\n    const [show, setShow] = useState(false);\r\n    const [loading,setLoading]=useState(false);\r\n    const [question,setQuestion]=useState({});\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n      <>\r\n        <Button className=\"m-3\" variant=\"primary\" onClick={handleShow}>\r\n            Ask a Question\r\n        </Button>\r\n  \r\n        <Modal\r\n            centered\r\n            size=\"lg\"\r\n            show={show}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Ask a Question</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"px-4\">\r\n                <AuthorInfo author={auth.user} self min/>\r\n                <Form>\r\n                    <Form.Group controlId=\"AskQuestionForm.ControlTextarea\">\r\n                        <Form.Label>Enter the question you want to ask:</Form.Label>\r\n                        <Form.Control \r\n                            className=\"mb-1\"\r\n                            placeholder=\"Enter your Question Title here\"\r\n                            onChange={(e)=>{\r\n                                setQuestion({...question,title:e.target.value});\r\n                            }} \r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"AskQuestionForm.ControlTextarea\">\r\n                        <Form.Label>Enter description for your question to make it more clear</Form.Label>\r\n                        <Form.Control \r\n                            className=\"mb-1\"\r\n                            placeholder=\"Write description for your question here\" as=\"textarea\" rows=\"3\"\r\n                            onChange={(e)=>{\r\n                                setQuestion({...question,description:e.target.value});\r\n                            }} \r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"AskQuestionForm.ControlTextarea\">\r\n                        <Form.Label>Tag your question:</Form.Label>\r\n                        <AddTags setQuestion={setQuestion} question={question}/>\r\n                        <Form.Text id=\"QuestionHelpBlock\" muted>\r\n                            Make sure the question you are going to ask is not already asked by someone else. We recommend searching before asking a new question.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Cancel\r\n                </Button>\r\n                <Button \r\n                    variant=\"primary\" \r\n                    onClick={()=>{\r\n                        setLoading(true);\r\n                        console.log('submitting question');\r\n                        request.post('/question',question)\r\n                        .then((response)=>{\r\n                            console.log(response.data._id);\r\n                            setLoading(false);\r\n                            createBrowserHistory().push(`#/question/${response.data._id}`)\r\n                        })\r\n                        .catch((error)=>{\r\n                            alert('Network error!');\r\n                            console.log(error)\r\n                            setLoading(false);\r\n                        })\r\n                    }}\r\n                >\r\n                    Ask\r\n                    {loading?<Spinner animation=\"border\" role=\"status\" size=\"sm\"/>:null}\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n}","import React from 'react';\r\nimport Entity from './Entity';\r\nimport CategoriesPanel from './Categories';\r\nimport AskQuestion from './AskQuestion';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport {Container,Col,Row,Card} from 'react-bootstrap';\r\n\r\nexport default function Home(props) {\r\n    // const [posts,setPosts]=useState([]);\r\n    // useEffect(()=>{\r\n    //     (async ()=>{\r\n    //       console.log('Fetching Posts');\r\n    //       setPosts((await axios.get('https://jsonplaceholder.typicode.com/posts?_limit=5')).data);\r\n    //     })()\r\n    // },[]);\r\n    return (\r\n        <Container fluid className=\"mx-4 mt-2 w-auto\">\r\n          <Row>\r\n            <Col xs={\"auto\"} className=\"d-none d-lg-block p-0\">\r\n              <CategoriesPanel/>\r\n            </Col>\r\n            <Col className=\"p-0 px-sm-2 px-md-3\">\r\n              <Row>\r\n                <AskQuestion/>\r\n              </Row>\r\n              <Row>\r\n                {props.posts.map((obj)=>\r\n                <Entity key={obj._id} id={obj.bestAnswer?obj.bestAnswer._id:obj._id} \r\n                  type={obj.bestAnswer?\"answer\":\"question\"}\r\n                  author={obj.bestAnswer?obj.bestAnswer.author:null} \r\n                  title={obj.title} \r\n                  body={obj.bestAnswer?ReactHtmlParser(obj.bestAnswer.body):null}\r\n                  commentCount={obj.bestAnswer?obj.bestAnswer.commentCount:0}     \r\n                  upvoteCount={obj.bestAnswer?obj.bestAnswer.upvoteCount:0}     \r\n                  downvoteCount={obj.bestAnswer?obj.bestAnswer.downvoteCount:0}     \r\n                />)}\r\n              </Row>\r\n            </Col>\r\n            <Col xs={\"auto\"} className=\"d-none d-xl-block p-0\">\r\n              <CategoriesPanel/>\r\n              <Card>\r\n              <Card.Body>\r\n              <div className=\"d-flex flex-column align-items-center\">\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href='http://play.google.com/store/?pcampaignid=pcampaignidMKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1'><img alt='Get it on Google Play' src='https://play.google.com/intl/en_us/badges/static/images/badges/en_badge_web_generic.png' height=\"100\"/></a>\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href='https://www.apple.com/ios/app-store/'><img alt='Get it on App Store' src='https://linkmaker.itunes.apple.com/images/badges/en-us/badge_appstore-lrg.svg' height=\"70\"/></a>\r\n              </div>\r\n              </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n    );\r\n  }","import React from 'react';\r\nimport {ListGroup} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\nconst Category = (props) => {\r\n    return(\r\n        <ListGroup.Item\r\n            className=\"d-flex justify-content-between align-items-center\"\r\n        >\r\n            <Link to={\"/question/\"+props.id}>\r\n                {props.name}\r\n            </Link>\r\n        </ListGroup.Item>\r\n    )\r\n}\r\n\r\nexport default Category;","import React, { useState, useEffect } from 'react';\r\nimport Category from './Category';\r\nimport {ListGroup, Card} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst CategoriesPanel = () => {\r\n    const [categories,setCategories]=useState([]);\r\n    useEffect(()=>{\r\n        (async ()=>{\r\n          console.log('Fetching Suggestions');\r\n          setCategories((await axios.get('https://jsonplaceholder.typicode.com/posts?_limit=10')).data);\r\n        })()\r\n    },[]);\r\n    return (\r\n        <Card style={{width:\"100%\",minWidth:\"271px\"}}>\r\n            <Card.Title className=\"pt-2 px-3\">Related Questions</Card.Title>\r\n            <Card.Body className=\"p-0\">\r\n                <ListGroup variant=\"flush\" className=\"border-top\">\r\n                    {categories.map((obj,key)=><Category key={key} id={obj.id} name={obj.title} following={true}/>)}\r\n                </ListGroup>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default CategoriesPanel;","import React, { useRef, useState, useMemo } from 'react'\r\nimport JoditEditor from \"jodit-react\";\r\n\r\nconst Editor = ({ value, onChange }) => {\r\n  const editor = useRef(null)\r\n  const [content, setContent] = useState(value)\r\n  const config = {\r\n    showWordsCounter: false,\r\n    showXPathInStatusbar: false,\r\n    uploader: { insertImageAsBase64URI: true },\r\n    buttons: \"bold,strikethrough,underline,italic,|,superscript,subscript,|,ul,ol,|,outdent,indent,|,paragraph,|,image,video,table,link,|,undo,redo,\\n,selectall,cut,copy,paste,|,hr,symbol,fullsize\",\r\n    toolbarAdaptive:false\r\n}\r\n\t\t\t\t\t\t\t\t\r\n  return useMemo(() => ( \r\n    <JoditEditor\r\n      ref={editor}\r\n      value={content}\r\n      config={config}\r\n      onChange={content => {\r\n        setContent(content)\r\n        onChange(content)\r\n      }}\r\n    /> \r\n  ), [])\r\n}\r\n\r\nexport default Editor","import React,{useState} from 'react';\r\nimport {Button,Modal,Form, Spinner} from 'react-bootstrap'\r\nimport AuthorInfo from './AuthorInfo';\r\nimport Editor from './Editor';\r\nimport {useAuth} from '../hooks/useAuth'\r\nimport request from '../utils/requests';\r\n\r\nexport default function WriteAnswer(props) {\r\n    const auth=useAuth();\r\n    const [show, setShow] = useState(false);\r\n    const [loading,setLoading]=useState(false);\r\n    const [answer,setAnswer]=useState({});\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n      <>\r\n        <Button className=\"m-3\" variant=\"primary\" onClick={handleShow}>\r\n            Write Answer\r\n        </Button>\r\n  \r\n        <Modal\r\n            centered\r\n            size=\"xl\"\r\n            show={show}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            enforceFocus={false}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Write Answer for: {props.questionTitle}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"px-4\">\r\n                <AuthorInfo author={auth.user} self/>\r\n                <Form>\r\n                    <Form.Group controlId=\"AnswerForm.ControlTextarea\">\r\n                        <Form.Label>Enter your answer</Form.Label>\r\n                        <Editor \r\n                            value={''} \r\n                            onChange={content => {\r\n                                let img = document.createElement('div');\r\n                                img.innerHTML=content;\r\n                                img=img.querySelector('img');\r\n                                setAnswer({ ...answer,body:content, \r\n                                // firstImg:img \r\n                                })\r\n                            }}\r\n                        />\r\n                        <Form.Text id=\"QuestionHelpBlock\" muted>\r\n                            Make your submission awesome\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Cancel\r\n                </Button>\r\n                <Button \r\n                    variant=\"primary\" \r\n                    onClick={()=>{\r\n                        setLoading(true);\r\n                        console.log(answer);\r\n                        request.post(`question/${props.questionID}/answer`,answer)\r\n                        .then((response)=>{\r\n                            const answer=response.data;\r\n                            handleClose();\r\n                            answer.key=answer._id;\r\n                            props.setAnswers([{...answer}].concat(props.answers));\r\n                            setLoading(false);\r\n                        })\r\n                        .catch((error)=>{\r\n                            alert('error!',error);\r\n                            console.log(error)\r\n                            setLoading(false);\r\n                        })\r\n                    }}\r\n                >\r\n                    Submit Answer \r\n                    {loading?<Spinner animation=\"border\" role=\"status\" size=\"sm\"/>:null}\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n}","import React, {useState, useEffect} from 'react';\r\nimport SuggestionsPanel from './Suggestions';\r\nimport AuthorInfo from './AuthorInfo';\r\nimport Entity from './Entity';\r\nimport {Container,Col,Row} from 'react-bootstrap';\r\nimport request from '../utils/requests';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport WriteAnswer from './WriteAnswer';\r\nimport { useParams } from 'react-router-dom';\r\nimport AddTags from './AddTags';\r\n\r\nexport default function QuestionPage(props) {\r\n    const questionID = useParams().id;\r\n    const [question,setQuestion]=useState();\r\n    const [answers,setAnswers]=useState([]);\r\n    useEffect(()=>{\r\n      console.log(questionID);\r\n      (async ()=>{\r\n          console.log('Fetching Answers');\r\n          setQuestion((await request.get(`question/${questionID}`)).data);\r\n          setAnswers((await request.get(`question/${questionID}/answers`)).data.body.answers);\r\n        })()\r\n    },[questionID]);\r\n    return (\r\n        <Container fluid className=\"mx-4 mt-2 w-auto\">\r\n          <Row>\r\n            {\r\n              question? \r\n              <Col className=\"p-0 px-sm-2 px-md-3\">\r\n                  <AuthorInfo author={question.author} min/>\r\n                  <h3>{question.title}</h3>\r\n                  <p className=\"text-muted\">{question.description}</p>\r\n                  <AddTags viewer tags={question.tags}/>\r\n                  <br/>\r\n                  <WriteAnswer questionID={questionID} answers={answers} setAnswers={setAnswers}/>\r\n                  <br/>\r\n                  {answers.map((obj)=>\r\n                  <Entity key={obj._id} id={obj._id} \r\n                    type=\"answer\" \r\n                    firstImg={ReactHtmlParser(obj.firstImg?obj.firstImg.outerHTML:null)} \r\n                    body={ReactHtmlParser(obj.body)} \r\n                    author={obj.author}\r\n                    commentCount={obj.commentCount}\r\n                    upvoteCount={obj.upvoteCount}\r\n                    downvoteCount={obj.downvoteCount}\r\n                    />)}\r\n              </Col>:null\r\n            }\r\n            <Col xs={4} className=\"d-none d-md-block p-0\">\r\n              <SuggestionsPanel/>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n    );\r\n}","import React,{useState, useEffect} from 'react';\nimport { IconContext } from \"react-icons\";\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom'\nimport QuestionPage from './components/QuestionPage';\nimport { ProvideAuth } from \"./hooks/useAuth\";\nimport request from './utils/requests';\n\nfunction App() {\n  const [posts,setPosts]=useState([]);\n  useEffect(()=>{\n      (async ()=>{\n        console.log('Fetching Posts');\n        // setPosts((await request.get('https://jsonplaceholder.typicode.com/posts?_limit=5')).data);\n        setPosts((await request.get(`feed`)).data)\n      })()\n  },[]);\n  return (\n    <ProvideAuth>\n      <Router>\n      <IconContext.Provider value={{ size:\"1.5em\"}}>\n        <div className=\"App\">\n          <Navbar/>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home posts={posts}/>\n            </Route>\n            <Route path=\"/question/:id\" exact>\n              <QuestionPage/>\n            </Route>\n          </Switch>\n        </div>\n      </IconContext.Provider>\n      </Router>\n    </ProvideAuth>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/userThumb.35d08c44.jpeg\";"],"sourceRoot":""}